# This .config.txt file documents configuration settings for your
# application
# The syntax is similar to that in .icf files:
#
# [GroupName]
# Setting     Documentation for setting
#
# e.g.
# [MyApplicationGroup]
# MySetting   Description of what MySetting is for, its default values, etc
[2D]
MaxBatch	Maximum batch length in vertices/inds. Increase this for performance improvement at the cost of some memory overhead (18 bytes per entry). If this value is set to zero, no batching will occur (i.e. MaxBatch=0 will preserve the 4.2 behaviour). Note if MaxBatch is non-zero it must be at least large enough to accomodate the single largest individual draw call. Default is 1000.
[UTIL]
NumMemBuckets		<Integer>			Maximum number of memory buckets allowed.
MaxAllocationWarning	<0 or 1>			Whether to warn when the application exceeds the maximum number of track-able memory allocations. (Default to on)
NumClassFactories <Integer>			Space reserved for class factories. Extra class factories will cause a reallocation. Defaults to 192.
MemoryBreakpoint	<Integer>		Memory allocation number to break on.
[GX]
TBDR						<0 or 1>	PRIVATE. HW uses TBDR, so delay chromas to the end of opaques.
PersistentDepth				<0 or 1> 	PRIVATE. Depth buffer persists between frames
GL2FlatShading			<0 or 1>		Respect ShadeMode material property in GL2. This forces strict compliance with SW/GL1 but requires significant CPU work - this setting exists for unit testing. Default is 0 (ShadeMode is ignored).
UnIndexedStreamMax			<Integer>	The maximum number of primitives that can be rendered without an explicit index stream. Default is 2048.
ForceFloatTransform		<0 or 1>		Force all transforms to use floating point matrix stack (matrices will be coerced at the IwGx boundary)
DisableSurfaces     <0 or 1>			Disable IwGxSurface. All calls to CreateSurface will fail and return false.
Rasterisation       <String>			'SW', 'HW', 'SW/HW' or 'HW/SW', indicating support for software rasterisation only, hardware rasterisation, or both. If both are specified, both are supported, and the first indicates which mode is started in.
Transform           <String>			'SW', 'HW', 'SW/HW' or 'HW/SW', indicating support for software transform only, hardware transform, or both. If both are specified, transform will begin in hardware can be dynamically switch to software.
Lighting            <String>			'SW', 'HW', 'SW/HW' or 'HW/SW', indicating support for software lighting only, hardware lighting, or both. If both are specified, lighting will begin in hardware can be dynamically switch to software.
DataCacheSize       <Integer>			Size in bytes of the global IwGx data cache. Default is 16384.
DataCacheSizeHW     <Integer>			(Optional) Size in bytes of the global IwGx data cache when HW rasterisation is initialised. If not specified DataCacheSize will be used.
NumSlotsFront       <Integer>			Number of sorting slots for 2D drawing that are in front of the 3D geometry. Default is 32.
NumSlotsBack        <Integer>			Number of sorting slots for 2D drawing that are behind the 3D geometry. Default is 4.
NumAnimatingMaterials		<Integer>	Number of animating textures to reserve space for. If unspecified, memory will be allocated dynamically.
DrawPriorityFIFO	<0 or 1>			If 1, for polys with equal Z (or equal sort slot), favor the first one submitted. Default is 0.
AssertPowerOf2				<0 or 1>	If 1, assert if a non-power-of-2 texture is uploaded. Non-power-2 textures have certain limitations associated with them. Default is 0.
UserShaderEnvironment	<0 or 1>		Shader environment to prepend to all shaders.
VertCacheSize       <Integer>			Software transform only: size of the IwGx software vertex cache. Default is 2048 vertices. Each cached vert is 20 bytes.
VertCacheSizeHW     <Integer>			Software transform only: size of the IwGx software vertex cache when HW rasterisation is initialised. If not specified VertCacheSize will be used.
PolyBufferSize      <Integer>			Software rasterisation only: size in bytes of the buffer used for the draw-list for the software renderer. Default is 32768.
PolyOTSize          <Integer>			Software rasterisation only: size in (4-byte) slots of the bucket-sorting ordering table used for the software renderer. Defaults is 4096.
PolyOTSizeSafety    <Integer>			Software rasterisation only: number of ordering table slots which will be behind the far z clip plane. The total number of slots remains the same as PolyOTSize.
NumTPages           <Integer>			Software rasterisation only: number of texture pages used for storing textures for the software renderer. Default is 16. Each page consumes 47306 bytes. The number of pages will be rounded up to the next even number.
NumTPagesNoMipMap   <Integer>			Software rasterisation only: number of texture pages without mipmaps. Default is 0. These pages will be used automatically when textures with mipmapping disabled are uploaded. This can be used to optimise memory usage, since each page consumes only 32768 bytes. The number of pages will be rounded up to the next even number.
NumTPageFreeRects   <Integer>			Software rasterisation only: maximum number of free rectangles that can be stored per texture page. Default is 14. Each rectangle consumes 8 bytes. If this number is exceeded then new memory will be allocated, and may not be freed until gx terminate.
MaxTexturesPerTPage <Integer>			Software rasterisation only: maximum number of textures that can be allocated from each texture page. Default is 50. Each texture consumes 8 bytes. If this number is exceeded then new memory will be allocated, and may not be freed until gx terminate. One list is kept for each t-page, and used to ensure that, when used in a FILO fashion, t-pages will return to the same free rect state following de-allocation. If this icf setting is set to zero, no list will be kept (saving memory) but t-pages may not return to the same state after deallocation.
NumPalettes16       <Integer>			Software rasterisation only: maximum number of 16-colour palettes that can be stored. Default is 192. Each 16 colour palette consumes 48 bytes.
NumPalettes256      <Integer>			Software rasterisation only: maximum number of 256-colour palettes that can be stored. Defaults is 64. Each 256 colour palette consumes 528 bytes.
UseEnvMap           <0 or 1>			Software rasterisation only: if 1, enable a screen-based environment map when software rendering. Default is 0.
PaletteSaturation   <0 or 1>			Software rasterisation only: if 1, calculated colour components from 128..255 result in textures being over-saturated. Note that this affects software rasterisation only. Default value is 0.
NumPaletteCacheBlocks		<Integer>	Software rasterisation only: maximum number of lit 16/256 colour palette cache blocks. Default is 16. Each block consumes 16896 bytes.
NumU16PaletteCacheBlocks	<Integer>	Software rasterisation only: maximum number of unlit 16 colour palettes that can be cached. Default is 24. Each 16 colour palette requires 32 bytes.
NumU256PaletteCacheBlocks	<Integer>	Software rasterisation only: maximum number of unlit 256 colour palettes that can be cached. Default is 4. Each 256 colour palette requires 512 bytes.
NumSpansBuffered		<Integer>	Software rasterisation only: DEPRECATED. number drawSpans to store before flushing. This number determines the rate of s3eDeviceYield(0) within a SW IwGxFlush(). Default is 160. Each drawSpan is 32 bytes
PixelsDrawnBeforeYield		<Integer>	Software rasterisation only: equivalent pixels to draw before calling s3eDeviceYield(0) within a SW IwGxFlush(). Default is 5120 or 32 times the NumSpansBuffered setting.
UseScanLineSWRenderer		<0 or 1>	Software rasterisation only: DEPRECATED. used only in unit tests. Applications should use IwGxInit_Base followed by IwGxInit_SWRenderScanLine() to use the ScanLine renderer. Default is zero (use Standard Renderer)
NumScanLineRendEdges		<Integer>	Software rasterisation only: number of Edges in the ScanLine renderer. Default is 600. Each Edge is 100 bytes
NumScanLineRendPolys		<Integer>	Software rasterisation only: number of Polys in the ScanLine renderer. Default is 300. Each Poly is 40 bytes
NumScanLineRendLists		<Integer>	Software rasterisation only: number of Lists in the ScanLine renderer. Default is 20. Each List is 32 bytes
NumScanLineRendBuckets		<Integer>	Software rasterisation only: number of Buckets in the ScanLine renderer. Default is 60. Each Bucket is 64 bytes
Force4BitGouraudDither		<Integer>	Software rasterisation only: dither between shades to reduce colour banding when Gouraud rendering 4bit-1555 textures. Default is 0.
PaletteTintByAmbientColour	<Integer>	Software rasterisation only: tint all palettes by the AmbientColour of the material. Default is 0.
UseRgbLighting				<0 or 1>	Software rasterisation only: globally disable/enable RGB modulation during SW rendering. RGB polys are significantly more expensive to render, so it is advisable to set this on only on higher-end devices. Default is off.
ForceConfigID					<Integer> PRIVATE.
ColourReductionThreshold		<Integer>	PRIVATE.
ColourReduction				<0 or 1>	PRIVATE.
ColourReductionDump			<0 or 1>	PRIVATE.
Control					<0 or 1>	PRIVATE.
OTBucketShift				<Integer>	PRIVATE, DEPRECATED.
AllowNoHashOnBaseSharedTextureName <0 or 1>	PRIVATE, DEPRECATED.
NoSharedTexels				<0 or 1>	PRIVATE.
UseBespokeSWRenderer		<0 or 1>	Software rasterisation only: DEPRECATED. used only in unit tests. Applications should use IwGxInit_Base followed by IwGxInit_Bespoke() to use the minimal link renderer. Default is zero (use Standard Renderer)
ScreenOrientAutoHandled		<0 or 1>	If 1 GX will handle rotated screen so that s3e doesn't have to do a rotated blit
ZDepthOfsSafety				<Integer>	The ordering table spans from NearZ to FarZ plus ZDepthOfsSafety
DisplayFrameRate			<0 or 1>	Display the frame rate on screen
GL_IMG_vertex_program					<0 or 1> - set to 0 to disable that extension
GL_IMG_texture_compression_pvrtc		<0 or 1> - set to 0 to disable that extension
GL_ARB_texture_env_combine				<0 or 1> - set to 0 to disable that extension
GL_IMG_texture_env_enhanced_fixed_function	<0 or 1> - set to 0 to disable that extension
GL_OES_matrix_palette					<0 or 1> - set to 0 to disable that extension
GL_IMG_user_clip_planes					<0 or 1> - set to 0 to disable that extension
GL_OES_draw_texture						<0 or 1> - set to 0 to disable that extension
GL_ATI_texture_compression_atitc                <0 or 1> - set to 0 to disable that extension
GL_ATI_extended_texture_coordinate_data_formats <0 or 1> - set to 0 to disable that extension
GL_OES_compressed_ETC1_RGB8_texture		<0 or 1> - set to 0 to disable that extension
GL_AMD_compressed_ATC_texture	<0 or 1> - set to 0 to disable that extension
GL_S3E_async							<0 or 1> - set to 0 to disable that extension
CompressedTexCacheSize		<Integer>	Sets the value in bytes of the maximum size of the compressed textures cache on disk. Defaults to 10 Mbs (10485760 bytes).
GLErrorChecking				<0 or 1>	In debug, check for gl errors frequently. This can adversely affect performance (dramatically so on some platforms).
PrintStringNumChars			<Integer>	Total number of characters permitted when using IwGxPrintString(), between each call to IwGxFlush(). Default is 2048.
PrintStringNumStrings		<In	teger>	Total number of strings permitted when using IwGxPrintString(), between each call to IwGxFlush(). Default is 128.
  # These two are left in [GX] for legacy reasons
ResBuild            <0 or 1>			If 1, enable building of resources (conversion of text-format resources into binary assets), 0 to disable resource building and only load binary assets. Default is 1 for debug configurations, 0 for release configurations.
ResBuildStyle		<String>			Name of build style to use for building resources. Build styles must be defined in <data>/resbuildstyles.itx
PaletteCacheSize	<Integer>			Software rasterisation only: maximum number of entries in the palette cache. Default is 800.
useGLContextShadow  <Integer>			If non-zero, Gx will allocate a block of memory in IwGxInit() of the specified size and maintain a copy of the data required to restore the GL context. On suspend, the GL context will be freed and on suspend it will be restored and configured back to pre-suspension state. This behaviour is required on KDDI GL devices. Default is 0 (i.e. off).
ShaderUniformShadowMem <Integer>		Size (in bytes) of the GL2 Shader Uniform Shadow. If this space runs out more gl calls than are strictly required will be made. Default value is 30000.
DisableCustomShaders	<0 or 1>		Disable custom shaders on materials
NoTextureUpload			<0 or 1>		If 1, bypass texture upload (all textures will be solid white)
UploadStreams			<0 or 1>		High-level control over whether streams are uploaded to VBOs. Defaults to 1 (streams are uploaded).
FreeStreamData			<0 or 1>		High-level control over whether local copis of stream data is ever deleted. Note IwGraphics models can be instructed to keep local copies of data using the geo template. Defaults to 1 (CIwGxStream::Upload ignores the passed parameters)
FixedPointTextureMatrix	<0 or 1>		If 1, force usage of a fixed point (instead of floating point) texture matrix
GLMipmapOffset			<Integer>		
RecreateGLSurfaceOnResize <0 or 1>		Does the GL surface need to be recreated when the device rotates?
BrowseAtlas			<0 or 1>			Browse atlases as they load
  # HW capabilities
AllowCTISurfaces			<0 or 1>	Surfaces using CopyTexImage
AllowEGLSurfaces			<0 or 1>	Surfaces using EGL
AllowFBOSurfaces			<0 or 1>	Surfaces using FBO
NoMakeCurrentAfterSwap		<0 or 1>	PRIVATE. No need for spurious make current
FlushTexturesOnResume		<0 or 1>	PRIVATE. Flush textures
RGBAUpload					<0 or 1>	PRIVATE. RGBA Upload
Power2Surfaces				<0 or 1>	PRIVATE. Surfaces must be power of 2
CompileShaders				<0 or 1>	PRIVATE. Shader compiler present
AlphaBlendInFF				<0 or 1>	PRIVATE. GLES 2.0 alpha blend fixed function actually works. Amazingly, this is not guaranteed...
MaxTextureStages			<Integer>	PRIVATE. Override number of stages reported by gl
[RESMANAGER]
ResBuild				<0 or 1>			If 1, enable building of resources (conversion of text-format resources into binary assets), 0 to disable resource building and only load binary assets. Default is 1 for debug configurations, 0 for release configurations.
ResBuildStyle			<String>			Name of build style to use for building resources. Build styles must be defined in <data>/resbuildstyles.itx
DontTestBinaries		<0 or 1>			Usually when a group is generated from source resources the versions of the resources built from source are destroyed and reloaded from the generated binaries. Enabling this flag disables that behaviour (the binaries are untested, but execution will continue more quickly). Use with caution - often resources have special behaviour when reading in serialise (for example, textures may be uploaded) any such behaviour will not be executed and thus resources are very unlikely to be in a usable state. The binaries generated will be identical. Default is 0. 
IncludeUnusedAssets		<0 or 1>			If 1, when a group is optimised unused assets will be retained at the end of the optimised group file. If 0, these assets are discarded and will not be available when the binary is reloaded. Default is 1. PRIVATE.
OptimiseMountedBinaries	<0 or 1>		If 1, reorganise the binaries of mounted files so resources lie in the file in the order they were requested during execution. NB. this is done on shutdown, so IwResManager must be terminated correctly for optimisation to happen. PRIVATE
BuildOnly				<String>			If set, build only groups appearing in this list. The list must be the plain filename of the group, e.g. BuildOnly=fixed will build only fixed.group. Note that if a parent group is excluded from being build using this setting, it's children will be also. 
IgnoreInlining			<0 or 1>			If 1, ignore "inline" directives in group templates. Child groups will always be built as distinct binaries. Default 0 (obey inline directives)
PatchBinariesInPlace	<0 or 1>			If 1, reloaded binaries replace the real binaries. By default groups are reloaded non-destructively to /debug_patches/
LegacyIwResourceSerialiseBehaviour <0 or 1>			If 1, use legacy IwResource subclassing behaviour. Prior to 4.2 IwResource subclasses could get away without calling the base class Serialise function. This was never correct (and could lead to very strange behaviour). 4.2 is much stricter. This setting restores the 4.1 behaviour for legacy applications. Default is 0 (4.2 behaviour).
[GxFont]
TextureMaxSize		<Integer>			Maximum width & height of font texture pages
CacheTextureMaxSize	<Integer>			Maximum width & height of glyph cache textures
EnableTTFKerning	<0 or 1>			If 1, enable kerning of True Type fonts. This only applies to TTFs which contain kerning information.
[FONT]
FontCacheSize       <Integer>			Determines how many rendered true type font glyphs stay in the cache
[GL]
ForceConfigID	Integer Override gl config choice
AlphaInFrameBuffer 0 or 1		Disable alpha channel. PRIVATE
FinishOnFBOBind		0 or 1		glFinish when switching away from FBO. PRIVATE.
RecreateGLSurfaceOnResize 0 or 1 Recreate GL surface on resize. PRIVATE.
RecreateGLSurfaceOnResume 0 or 1 Recreate GL surface on resize. PRIVATE.
VirtualWidth	Integer		virtual resolution in X
VirtualHeight	Integer		virtual resolution in Y
VirtualRotate	Integer		Base virtual rotation
VirtualLetterbox	0 or 1		Maintain aspect ratio and letterbox
VirtualResolution	0 or 1		Automatically scale and rotate gl projection matrix. GL1 only. (default on)		
ConsistentHandles   0 or 1		Present application with consistent object handles (default on).
CacheState			0 or 1		Record entire GL state, guard redundant calls (default on)
CacheTextures		0 or 1		Cache textures and reupload if gl is suspended (default on if S3E_GL_MUST_SUSPEND is true)
CacheVBOs			0 or 1		Cache vbos and reupload if gl is suspended (default on if S3E_GL_MUST_SUSPEND is true)
CacheSurfaces		0 or 1		Cache surfaces and reupload if gl is suspended (default on if S3E_GL_MUST_SUSPEND is true)
CacheShaders		0 or 1		Cache shaders and reupload if gl is suspended (default on if S3E_GL_MUST_SUSPEND is true)
CacheVBOPointers	0 or 1		Cache VBO data pointers only (i.e. the application is keeping a copy) (default off)
AllowTextureAllocInBind 0 or 1	Alloc glBindTexture with an unrecognised handle to allocate that handle.

[system]
width                        <Integer>
height                       <Integer>
fullscreen                   <Integer>
fps                          <Integer>
logfile                      <String>
[interface_common]
background                   <Integer>
text                         <Integer>
style                        <String>
border_hight                 <Integer>
border_low                   <Integer>
font                         <String>
[interface_buttons]
normal                       <Integer>
pressed                      <Integer>
text                         <Integer>

